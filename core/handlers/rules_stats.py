from aiogram import Router, types
from aiogram.filters import Command
from aiogram import F
from sqlalchemy import select, func
from db.database import AsyncSessionLocal
from db.models import Violation


router = Router()

@router.message(Command("—É—Å—Ç–∞–≤"))
@router.message(F.text.lower() == "üìä —É—Å—Ç–∞–≤")
async def ustav_stats(message: types.Message):
    async with AsyncSessionLocal() as session:
        result = await session.execute(
            select(func.count(Violation.id))
            .where(Violation.user_id == message.from_user.id)
        )
        total_violations = result.scalar() or 0

        last_violation = await session.execute(
            select(Violation.date)
            .where(Violation.user_id == message.from_user.id)
            .order_by(Violation.date.desc())
            .limit(1)
        )
        last = last_violation.scalar()

        msg = f"üìä –ù–∞—Ä—É—à–µ–Ω–∏—è –£—Å—Ç–∞–≤–∞:\n–í—Å–µ–≥–æ: {total_violations}\n"
        if last:
            msg += f"–ü–æ—Å–ª–µ–¥–Ω–µ–µ: {last.strftime('%d.%m.%Y')}"
        else:
            msg += "–¢—ã —á–∏—Å—Ç. –£—Å—Ç–∞–≤ —Å–æ–±–ª—é–¥–∞–µ—Ç—Å—è."

        await message.answer(msg)
